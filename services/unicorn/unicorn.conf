WD      = ENV['APP_DIR']
HOST    = ENV['UNICORN_HOST']
PORT    = ENV['UNICORN_PORT']
TIMEOUT = ENV['UNICORN_TIMEOUT']
WORKERS = ENV['UNICORN_WORKERS']

worker_processes WORKERS.to_i
working_directory WD
listen "#{HOST}:#{PORT}", :tcp_nopush => true
timeout TIMEOUT.to_i

pid "#{WD}/basic_unicorn.pid"

stderr_path "#{WD}/web_api/log/unicorn.log"
stdout_path "#{WD}/web_api/log/unicorn.log"

preload_app true
if GC.respond_to?(:copy_on_write_friendly=)
  GC.copy_on_write_friendly = true
end

before_fork do |server, worker|
  old_pid = "#{server.config[:pid]}.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      Process.kill("QUIT", File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end
end
